swagger: "2.0"
host: localhost:8322
info:
  version: 1.0.0
  title: acnh
basePath: /api/v1
consumes:
  - application/json
produces:
  - application/json

definitions:
  Image:
    type: object
    description: image
    properties:
      image_type:
        type: string
        x-go-custom-tag: 'bson:"image_type"'
      image_filename:
        x-go-custom-tag: 'bson:"image_filename"'
        type: string
      image_url:
        x-go-custom-tag: 'bson:"image_url"'
        type: string

  ListResult:
    type: object
    description: The list object
    properties:
      result_count:
        type: integer
        readOnly: true
      page_cursor:
        type: string
        description: result count

  Name:
    type: object
    properties:
      name_en:
        type: string
        description: english
        x-go-custom-tag: 'bson:"name_en"'
      name_cn:
        type: string
        description: chinese
        x-go-custom-tag: 'bson:"name_cn"'

  # Weather:
  #   type: string
  #   enum:
  #     - Any
  #     - Rain
  #     - Snow

  Colors:
    type: array
    items:
      type: string

  # Rarity:
  #   type: string
  #   enum:
  #     - Common
  #     - Uncommon
  #     - Rare
  #     - Ultra-rare

  Months:
    type: object
    properties:
      northern:
        type: array
        x-go-custom-tag: 'bson:"northern"'
        items:
          type: integer
      southern:
        type: array
        x-go-custom-tag: 'bson:"southern"'
        items:
          type: integer

  Bug:
    type: object
    properties:
      id:
        description: id
        type: integer
        x-go-custom-tag: 'bson:"id"'
      entry_id:
        description: entry id
        type: string
        x-go-custom-tag: 'bson:"entry_id"'
      images:
        type: array
        x-go-custom-tag: 'bson:"images"'
        items:
          $ref: "#/definitions/Image"
      name:
        $ref: "#/definitions/Name"
        x-go-custom-tag: 'bson:"name"'
      sell_price:
        x-go-custom-tag: 'bson:"sell_price"'
        type: number
        format: integer
      months:
        $ref: "#/definitions/Months"
        x-go-custom-tag: 'bson:"months"'
      hours:
        description: availability by hour range
        type: string
        x-go-custom-tag: 'bson:"hours"'
      location:
        type: string
        x-go-custom-tag: 'bson:"location"'
      weather:
        type: string
        x-go-custom-tag: 'bson:"weather"'
      catches_to_unlock:
        type: integer
        x-go-custom-tag: 'bson:"catches_to_unlock"'
        format: int64
      colors:
        $ref: "#/definitions/Colors"
        x-go-custom-tag: 'bson:"colors"'

  Fish:
    type: object
    properties:
      id:
        description: id
        type: integer
        x-go-custom-tag: 'bson:"id"'
      entry_id:
        description: entry id
        type: string
        x-go-custom-tag: 'bson:"entry_id"'
      images:
        type: array
        x-go-custom-tag: 'bson:"images"'
        items:
          $ref: "#/definitions/Image"
      name:
        $ref: "#/definitions/Name"
        x-go-custom-tag: 'bson:"name"'
      sell_price:
        x-go-custom-tag: 'bson:"sell_price"'
        type: number
        format: integer
      shadow:
        x-go-custom-tag: 'bson:"shadow"'
        type: string
      size:
        x-go-custom-tag: 'bson:"size"'
        type: string
      months:
        $ref: "#/definitions/Months"
        x-go-custom-tag: 'bson:"months"'
      hours:
        description: availability by hour range
        type: string
        x-go-custom-tag: 'bson:"hours"'
      location:
        type: string
        x-go-custom-tag: 'bson:"location"'
      weather:
        type: string
        x-go-custom-tag: 'bson:"weather"'
      catches_to_unlock:
        type: integer
        x-go-custom-tag: 'bson:"catches_to_unlock"'
        format: int64
      lighting_type:
        type: string
        x-go-custom-tag: 'bson:"lighting_type"'
      colors:
        $ref: "#/definitions/Colors"
        x-go-custom-tag: 'bson:"colors"'

  FishListResult:
    type: object
    allOf:
      - $ref: "#/definitions/ListResult"
      - type: object
        properties:
          results:
            type: array
            items:
              $ref: "#/definitions/Fish"

parameters:
  SortBy:
    description: Fields by which the records are sorted
    type: string
    in: query
    name: sort_by
    required: false
  Cursor:
    type: string
    in: query
    name: cursor
    required: false
  PageSize:
    description: Maximal number of record return in one page, server may return less.
    in: query
    name: page_size
    type: integer
    minimum: 0
    maximum: 1000
    default: 20
    required: false

paths:
  /catalog/fishes:
    get:
      tags:
        - fish
      operationId: listFishes
      parameters:
        - $ref: "#/parameters/Cursor"
        - $ref: "#/parameters/PageSize"
        - $ref: "#/parameters/SortBy"
      responses:
        200:
          description: returns a list of fishes
          schema:
            $ref: "#/definitions/FishListResult"
  /catalog/fishes/{id}:
    get:
      tags:
        - fish
      operationId: getFish
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Numeric ID of the fish to get.
      responses:
        200:
          description: return a fish
          schema:
            $ref: "#/definitions/Fish"
        404:
          description: not found
