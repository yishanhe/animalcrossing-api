// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "title": "acnh",
    "version": "1.0.0"
  },
  "host": "localhost:8322",
  "basePath": "/api/v1",
  "paths": {
    "/catalog/bugs": {
      "get": {
        "tags": [
          "bug"
        ],
        "operationId": "listBugs",
        "parameters": [
          {
            "$ref": "#/parameters/Cursor"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/SortBy"
          }
        ],
        "responses": {
          "200": {
            "description": "returns a list of fishes",
            "schema": {
              "$ref": "#/definitions/BugListResult"
            }
          }
        }
      }
    },
    "/catalog/bugs/{id}": {
      "get": {
        "tags": [
          "bug"
        ],
        "operationId": "getBug",
        "parameters": [
          {
            "type": "integer",
            "description": "Numeric ID of the bug to get.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "return a bug",
            "schema": {
              "$ref": "#/definitions/Bug"
            }
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/catalog/fishes": {
      "get": {
        "tags": [
          "fish"
        ],
        "operationId": "listFishes",
        "parameters": [
          {
            "$ref": "#/parameters/Cursor"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/SortBy"
          }
        ],
        "responses": {
          "200": {
            "description": "returns a list of fishes",
            "schema": {
              "$ref": "#/definitions/FishListResult"
            }
          }
        }
      }
    },
    "/catalog/fishes/{id}": {
      "get": {
        "tags": [
          "fish"
        ],
        "operationId": "getFish",
        "parameters": [
          {
            "type": "integer",
            "description": "Numeric ID of the fish to get.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "return a fish",
            "schema": {
              "$ref": "#/definitions/Fish"
            }
          },
          "404": {
            "description": "not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Bug": {
      "type": "object",
      "properties": {
        "catches_to_unlock": {
          "type": "integer",
          "format": "int64",
          "x-go-custom-tag": "bson:\"catches_to_unlock\""
        },
        "colors": {
          "x-go-custom-tag": "bson:\"colors\"",
          "$ref": "#/definitions/Colors"
        },
        "entry_id": {
          "description": "entry id",
          "type": "string",
          "x-go-custom-tag": "bson:\"entry_id\""
        },
        "hours": {
          "description": "availability by hour range",
          "type": "string",
          "x-go-custom-tag": "bson:\"hours\""
        },
        "id": {
          "description": "id",
          "type": "integer",
          "x-go-custom-tag": "bson:\"id\""
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          },
          "x-go-custom-tag": "bson:\"images\""
        },
        "location": {
          "type": "string",
          "x-go-custom-tag": "bson:\"location\""
        },
        "months": {
          "x-go-custom-tag": "bson:\"months\"",
          "$ref": "#/definitions/Months"
        },
        "name": {
          "x-go-custom-tag": "bson:\"name\"",
          "$ref": "#/definitions/Name"
        },
        "sell_price": {
          "type": "number",
          "format": "integer",
          "x-go-custom-tag": "bson:\"sell_price\""
        },
        "weather": {
          "type": "string",
          "x-go-custom-tag": "bson:\"weather\""
        }
      }
    },
    "BugListResult": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ListResult"
        },
        {
          "type": "object",
          "properties": {
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Bug"
              }
            }
          }
        }
      ]
    },
    "Colors": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "Fish": {
      "type": "object",
      "properties": {
        "catches_to_unlock": {
          "type": "integer",
          "format": "int64",
          "x-go-custom-tag": "bson:\"catches_to_unlock\""
        },
        "colors": {
          "x-go-custom-tag": "bson:\"colors\"",
          "$ref": "#/definitions/Colors"
        },
        "entry_id": {
          "description": "entry id",
          "type": "string",
          "x-go-custom-tag": "bson:\"entry_id\""
        },
        "hours": {
          "description": "availability by hour range",
          "type": "string",
          "x-go-custom-tag": "bson:\"hours\""
        },
        "id": {
          "description": "id",
          "type": "integer",
          "x-go-custom-tag": "bson:\"id\""
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          },
          "x-go-custom-tag": "bson:\"images\""
        },
        "lighting_type": {
          "type": "string",
          "x-go-custom-tag": "bson:\"lighting_type\""
        },
        "location": {
          "type": "string",
          "x-go-custom-tag": "bson:\"location\""
        },
        "months": {
          "x-go-custom-tag": "bson:\"months\"",
          "$ref": "#/definitions/Months"
        },
        "name": {
          "x-go-custom-tag": "bson:\"name\"",
          "$ref": "#/definitions/Name"
        },
        "sell_price": {
          "type": "number",
          "format": "integer",
          "x-go-custom-tag": "bson:\"sell_price\""
        },
        "shadow": {
          "type": "string",
          "x-go-custom-tag": "bson:\"shadow\""
        },
        "size": {
          "type": "string",
          "x-go-custom-tag": "bson:\"size\""
        },
        "weather": {
          "type": "string",
          "x-go-custom-tag": "bson:\"weather\""
        }
      }
    },
    "FishListResult": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ListResult"
        },
        {
          "type": "object",
          "properties": {
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Fish"
              }
            }
          }
        }
      ]
    },
    "Image": {
      "description": "image",
      "type": "object",
      "properties": {
        "image_filename": {
          "type": "string",
          "x-go-custom-tag": "bson:\"image_filename\""
        },
        "image_type": {
          "type": "string",
          "x-go-custom-tag": "bson:\"image_type\""
        },
        "image_url": {
          "type": "string",
          "x-go-custom-tag": "bson:\"image_url\""
        }
      }
    },
    "ListResult": {
      "description": "The list object",
      "type": "object",
      "properties": {
        "page_cursor": {
          "description": "result count",
          "type": "string"
        },
        "result_count": {
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Months": {
      "type": "object",
      "properties": {
        "northern": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "x-go-custom-tag": "bson:\"northern\""
        },
        "southern": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "x-go-custom-tag": "bson:\"southern\""
        }
      }
    },
    "Name": {
      "type": "object",
      "properties": {
        "name_cn": {
          "description": "chinese",
          "type": "string",
          "x-go-custom-tag": "bson:\"name_cn\""
        },
        "name_en": {
          "description": "english",
          "type": "string",
          "x-go-custom-tag": "bson:\"name_en\""
        }
      }
    }
  },
  "parameters": {
    "Cursor": {
      "type": "string",
      "name": "cursor",
      "in": "query"
    },
    "PageSize": {
      "maximum": 1000,
      "type": "integer",
      "default": 20,
      "description": "Maximal number of record return in one page, server may return less.",
      "name": "page_size",
      "in": "query"
    },
    "SortBy": {
      "type": "string",
      "description": "Fields by which the records are sorted",
      "name": "sort_by",
      "in": "query"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "title": "acnh",
    "version": "1.0.0"
  },
  "host": "localhost:8322",
  "basePath": "/api/v1",
  "paths": {
    "/catalog/bugs": {
      "get": {
        "tags": [
          "bug"
        ],
        "operationId": "listBugs",
        "parameters": [
          {
            "type": "string",
            "name": "cursor",
            "in": "query"
          },
          {
            "maximum": 1000,
            "minimum": 0,
            "type": "integer",
            "default": 20,
            "description": "Maximal number of record return in one page, server may return less.",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Fields by which the records are sorted",
            "name": "sort_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "returns a list of fishes",
            "schema": {
              "$ref": "#/definitions/BugListResult"
            }
          }
        }
      }
    },
    "/catalog/bugs/{id}": {
      "get": {
        "tags": [
          "bug"
        ],
        "operationId": "getBug",
        "parameters": [
          {
            "type": "integer",
            "description": "Numeric ID of the bug to get.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "return a bug",
            "schema": {
              "$ref": "#/definitions/Bug"
            }
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/catalog/fishes": {
      "get": {
        "tags": [
          "fish"
        ],
        "operationId": "listFishes",
        "parameters": [
          {
            "type": "string",
            "name": "cursor",
            "in": "query"
          },
          {
            "maximum": 1000,
            "minimum": 0,
            "type": "integer",
            "default": 20,
            "description": "Maximal number of record return in one page, server may return less.",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Fields by which the records are sorted",
            "name": "sort_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "returns a list of fishes",
            "schema": {
              "$ref": "#/definitions/FishListResult"
            }
          }
        }
      }
    },
    "/catalog/fishes/{id}": {
      "get": {
        "tags": [
          "fish"
        ],
        "operationId": "getFish",
        "parameters": [
          {
            "type": "integer",
            "description": "Numeric ID of the fish to get.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "return a fish",
            "schema": {
              "$ref": "#/definitions/Fish"
            }
          },
          "404": {
            "description": "not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Bug": {
      "type": "object",
      "properties": {
        "catches_to_unlock": {
          "type": "integer",
          "format": "int64",
          "x-go-custom-tag": "bson:\"catches_to_unlock\""
        },
        "colors": {
          "x-go-custom-tag": "bson:\"colors\"",
          "$ref": "#/definitions/Colors"
        },
        "entry_id": {
          "description": "entry id",
          "type": "string",
          "x-go-custom-tag": "bson:\"entry_id\""
        },
        "hours": {
          "description": "availability by hour range",
          "type": "string",
          "x-go-custom-tag": "bson:\"hours\""
        },
        "id": {
          "description": "id",
          "type": "integer",
          "x-go-custom-tag": "bson:\"id\""
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          },
          "x-go-custom-tag": "bson:\"images\""
        },
        "location": {
          "type": "string",
          "x-go-custom-tag": "bson:\"location\""
        },
        "months": {
          "x-go-custom-tag": "bson:\"months\"",
          "$ref": "#/definitions/Months"
        },
        "name": {
          "x-go-custom-tag": "bson:\"name\"",
          "$ref": "#/definitions/Name"
        },
        "sell_price": {
          "type": "number",
          "format": "integer",
          "x-go-custom-tag": "bson:\"sell_price\""
        },
        "weather": {
          "type": "string",
          "x-go-custom-tag": "bson:\"weather\""
        }
      }
    },
    "BugListResult": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ListResult"
        },
        {
          "type": "object",
          "properties": {
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Bug"
              }
            }
          }
        }
      ]
    },
    "Colors": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "Fish": {
      "type": "object",
      "properties": {
        "catches_to_unlock": {
          "type": "integer",
          "format": "int64",
          "x-go-custom-tag": "bson:\"catches_to_unlock\""
        },
        "colors": {
          "x-go-custom-tag": "bson:\"colors\"",
          "$ref": "#/definitions/Colors"
        },
        "entry_id": {
          "description": "entry id",
          "type": "string",
          "x-go-custom-tag": "bson:\"entry_id\""
        },
        "hours": {
          "description": "availability by hour range",
          "type": "string",
          "x-go-custom-tag": "bson:\"hours\""
        },
        "id": {
          "description": "id",
          "type": "integer",
          "x-go-custom-tag": "bson:\"id\""
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          },
          "x-go-custom-tag": "bson:\"images\""
        },
        "lighting_type": {
          "type": "string",
          "x-go-custom-tag": "bson:\"lighting_type\""
        },
        "location": {
          "type": "string",
          "x-go-custom-tag": "bson:\"location\""
        },
        "months": {
          "x-go-custom-tag": "bson:\"months\"",
          "$ref": "#/definitions/Months"
        },
        "name": {
          "x-go-custom-tag": "bson:\"name\"",
          "$ref": "#/definitions/Name"
        },
        "sell_price": {
          "type": "number",
          "format": "integer",
          "x-go-custom-tag": "bson:\"sell_price\""
        },
        "shadow": {
          "type": "string",
          "x-go-custom-tag": "bson:\"shadow\""
        },
        "size": {
          "type": "string",
          "x-go-custom-tag": "bson:\"size\""
        },
        "weather": {
          "type": "string",
          "x-go-custom-tag": "bson:\"weather\""
        }
      }
    },
    "FishListResult": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ListResult"
        },
        {
          "type": "object",
          "properties": {
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Fish"
              }
            }
          }
        }
      ]
    },
    "Image": {
      "description": "image",
      "type": "object",
      "properties": {
        "image_filename": {
          "type": "string",
          "x-go-custom-tag": "bson:\"image_filename\""
        },
        "image_type": {
          "type": "string",
          "x-go-custom-tag": "bson:\"image_type\""
        },
        "image_url": {
          "type": "string",
          "x-go-custom-tag": "bson:\"image_url\""
        }
      }
    },
    "ListResult": {
      "description": "The list object",
      "type": "object",
      "properties": {
        "page_cursor": {
          "description": "result count",
          "type": "string"
        },
        "result_count": {
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Months": {
      "type": "object",
      "properties": {
        "northern": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "x-go-custom-tag": "bson:\"northern\""
        },
        "southern": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "x-go-custom-tag": "bson:\"southern\""
        }
      }
    },
    "Name": {
      "type": "object",
      "properties": {
        "name_cn": {
          "description": "chinese",
          "type": "string",
          "x-go-custom-tag": "bson:\"name_cn\""
        },
        "name_en": {
          "description": "english",
          "type": "string",
          "x-go-custom-tag": "bson:\"name_en\""
        }
      }
    }
  },
  "parameters": {
    "Cursor": {
      "type": "string",
      "name": "cursor",
      "in": "query"
    },
    "PageSize": {
      "maximum": 1000,
      "minimum": 0,
      "type": "integer",
      "default": 20,
      "description": "Maximal number of record return in one page, server may return less.",
      "name": "page_size",
      "in": "query"
    },
    "SortBy": {
      "type": "string",
      "description": "Fields by which the records are sorted",
      "name": "sort_by",
      "in": "query"
    }
  }
}`))
}
