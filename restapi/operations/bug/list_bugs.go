// Code generated by go-swagger; DO NOT EDIT.

package bug

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ListBugsHandlerFunc turns a function with the right signature into a list bugs handler
type ListBugsHandlerFunc func(ListBugsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListBugsHandlerFunc) Handle(params ListBugsParams) middleware.Responder {
	return fn(params)
}

// ListBugsHandler interface for that can handle valid list bugs params
type ListBugsHandler interface {
	Handle(ListBugsParams) middleware.Responder
}

// NewListBugs creates a new http.Handler for the list bugs operation
func NewListBugs(ctx *middleware.Context, handler ListBugsHandler) *ListBugs {
	return &ListBugs{Context: ctx, Handler: handler}
}

/*ListBugs swagger:route GET /catalog/bugs bug listBugs

ListBugs list bugs API

*/
type ListBugs struct {
	Context *middleware.Context
	Handler ListBugsHandler
}

func (o *ListBugs) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListBugsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
