// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Weather weather
//
// swagger:model Weather
type Weather string

const (

	// WeatherAny captures enum value "Any"
	WeatherAny Weather = "Any"

	// WeatherRain captures enum value "Rain"
	WeatherRain Weather = "Rain"

	// WeatherSnow captures enum value "Snow"
	WeatherSnow Weather = "Snow"
)

// for schema
var weatherEnum []interface{}

func init() {
	var res []Weather
	if err := json.Unmarshal([]byte(`["Any","Rain","Snow"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		weatherEnum = append(weatherEnum, v)
	}
}

func (m Weather) validateWeatherEnum(path, location string, value Weather) error {
	if err := validate.Enum(path, location, value, weatherEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this weather
func (m Weather) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateWeatherEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
