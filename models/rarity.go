// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Rarity rarity
//
// swagger:model Rarity
type Rarity string

const (

	// RarityCommon captures enum value "Common"
	RarityCommon Rarity = "Common"

	// RarityUncommon captures enum value "Uncommon"
	RarityUncommon Rarity = "Uncommon"

	// RarityRare captures enum value "Rare"
	RarityRare Rarity = "Rare"

	// RarityUltraRare captures enum value "Ultra-rare"
	RarityUltraRare Rarity = "Ultra-rare"
)

// for schema
var rarityEnum []interface{}

func init() {
	var res []Rarity
	if err := json.Unmarshal([]byte(`["Common","Uncommon","Rare","Ultra-rare"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		rarityEnum = append(rarityEnum, v)
	}
}

func (m Rarity) validateRarityEnum(path, location string, value Rarity) error {
	if err := validate.Enum(path, location, value, rarityEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this rarity
func (m Rarity) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateRarityEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
